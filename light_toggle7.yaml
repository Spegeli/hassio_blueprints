#Version 0.2
blueprint:
  name: Licht Ein-/Ausschalten (per Bewegungsmelder / PING-Sensor).
  description: Licht per Bewegungsmelder oder basierend auf PING-Sensor Ein-/Ausschalten.
  domain: automation
  source_url: https://github.com/Spegeli/hassio_blueprints/edit/main/light-toggle.yaml
  input:
    ping_entity:
      name: PING-Sensor
      description: This sensor will trigger the turning on of the target entity.
      default:
      selector:
        entity:
          domain: binary_sensor
          device_class: connectivity
    motion_entity:
      name: Bewegungsmelder
      description: This sensor will trigger the turning on of the target entity.
      default:
      selector:
        entity:
          domain: binary_sensor
          device_class: motion          
    light_target:
      name: Licht
      selector:
        target:
          entity:
            domain: light  
    no_motion_wait:
      name: Wartezeit
      description: Zeit, um das Licht auszuschalten, nachdem die letzte Bewegung erkannt wurde (wird nur bei Bewegungsmelder benutzt).
      default: 0
      selector:
        number:
          min: 0
          max: 3600
          unit_of_measurement: seconds            

mode: restart
max_exceeded: silent

trigger_variables:
  ping_entity: !input ping_entity
  motion_entity: !input motion_entity
  light_target: !input light_target  
  no_motion_wait: !input no_motion_wait

trigger:
- platform: template
  value_template: >-
     {{ ping_entity != none and is_state(ping_entity, 'on') }}
- platform: template
  value_template: >-
     {{ motion_entity != none and is_state(motion_entity, 'on') }}

action:
  - alias: "Turn on the light"
    service: light.turn_on
    target: !input light_target
  - alias: "Wait until there is no motion from device"
    wait_for_trigger:
      platform: state
      entity_id: !input motion_entity
      to: "off"
  - alias: "Wait the number of seconds that has been set"
    delay: !input no_motion_wait
  - alias: "Turn off the light"
    service: light.turn_off
    target: !input light_target
